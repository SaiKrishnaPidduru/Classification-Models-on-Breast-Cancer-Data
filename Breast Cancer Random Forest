{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOehbWPFMKdNexDf5lcS0NO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"4N2kKz-FUC8m","executionInfo":{"status":"ok","timestamp":1709821905845,"user_tz":-330,"elapsed":2263,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from sklearn.preprocessing import StandardScaler, Normalizer, scale\n","from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, GradientBoostingClassifier, ExtraTreesClassifier\n","from sklearn.svm import SVC, LinearSVC\n","from sklearn.metrics import confusion_matrix, log_loss, auc, roc_curve, roc_auc_score, recall_score, precision_recall_curve\n","from sklearn.metrics import make_scorer, precision_score, fbeta_score, f1_score, classification_report\n","from sklearn.model_selection import cross_val_score, train_test_split, KFold, StratifiedShuffleSplit, GridSearchCV\n","from sklearn.linear_model import LogisticRegression\n","\n","%matplotlib inline\n","plt.rcParams['figure.figsize'] = (16, 9)\n","\n","seed = 999"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-FZg2-eBU3nb","executionInfo":{"status":"ok","timestamp":1709822017243,"user_tz":-330,"elapsed":39268,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}},"outputId":"6fcb1b0d-118f-4ac3-bd3e-668fc3b70919"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/My Drive/Colab Notebooks/breast_cancer_data.csv')"],"metadata":{"id":"OtIhSs2_VOAo","executionInfo":{"status":"ok","timestamp":1709822030048,"user_tz":-330,"elapsed":751,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["X = df.iloc[:, 0:-1]\n","Y = df.iloc[:,-1]"],"metadata":{"id":"UYA8IncGVaUv","executionInfo":{"status":"ok","timestamp":1709822096891,"user_tz":-330,"elapsed":1,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["Xtrain, Xtest, Ytrain, Ytest = train_test_split(X, Y, test_size = .33, stratify = Y, random_state = seed)"],"metadata":{"id":"QtNf0qFcVmRP","executionInfo":{"status":"ok","timestamp":1709822118772,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# prompt: code to check for data imbalance\n","\n","Y.value_counts()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wPhTG24jVwM5","executionInfo":{"status":"ok","timestamp":1709822216265,"user_tz":-330,"elapsed":4,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}},"outputId":"39b83053-adeb-4a0b-d73a-bcbf3ed81833"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1.0    357\n","0.0    212\n","Name: target, dtype: int64"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["positive_weight = sum(Ytrain == 0) / sum(Ytrain == 1)  # size to repeat y == 1\n","estimator = RandomForestClassifier(random_state=0, class_weight = {0 : 1, 1 : positive_weight}, warm_start = True)"],"metadata":{"id":"vg0C62cgV-eH","executionInfo":{"status":"ok","timestamp":1709822304433,"user_tz":-330,"elapsed":37,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":[" rf_tuned_parameters = {\"max_depth\": [10, 20, 50, 100], 'n_estimators': [50, 100, 200, 500], 'min_samples_leaf': [10, 20, 50]}"],"metadata":{"id":"6GJwuOYtWY-l","executionInfo":{"status":"ok","timestamp":1709822363295,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["cv_grid = GridSearchCV(estimator, param_grid = rf_tuned_parameters, scoring = 'roc_auc', verbose = 5) # 'recall', my_score\n","cv_grid.fit(Xtrain, Ytrain)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"JangJhEXWruI","executionInfo":{"status":"ok","timestamp":1709822493671,"user_tz":-330,"elapsed":102733,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}},"outputId":"f6493726-a818-49c0-8d98-a1c7cdcb9504"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["Fitting 5 folds for each of 48 candidates, totalling 240 fits\n","[CV 1/5] END max_depth=10, min_samples_leaf=10, n_estimators=50;, score=0.997 total time=   0.4s\n","[CV 2/5] END max_depth=10, min_samples_leaf=10, n_estimators=50;, score=0.993 total time=   0.3s\n","[CV 3/5] END max_depth=10, min_samples_leaf=10, n_estimators=50;, score=0.999 total time=   0.2s\n","[CV 4/5] END max_depth=10, min_samples_leaf=10, n_estimators=50;, score=0.965 total time=   0.3s\n","[CV 5/5] END max_depth=10, min_samples_leaf=10, n_estimators=50;, score=0.984 total time=   0.2s\n","[CV 1/5] END max_depth=10, min_samples_leaf=10, n_estimators=100;, score=0.997 total time=   0.3s\n","[CV 2/5] END max_depth=10, min_samples_leaf=10, n_estimators=100;, score=0.992 total time=   0.2s\n","[CV 3/5] END max_depth=10, min_samples_leaf=10, n_estimators=100;, score=0.999 total time=   0.2s\n","[CV 4/5] END max_depth=10, min_samples_leaf=10, n_estimators=100;, score=0.959 total time=   0.2s\n","[CV 5/5] END max_depth=10, min_samples_leaf=10, n_estimators=100;, score=0.985 total time=   0.2s\n","[CV 1/5] END max_depth=10, min_samples_leaf=10, n_estimators=200;, score=0.996 total time=   0.4s\n","[CV 2/5] END max_depth=10, min_samples_leaf=10, n_estimators=200;, score=0.992 total time=   0.4s\n","[CV 3/5] END max_depth=10, min_samples_leaf=10, n_estimators=200;, score=0.999 total time=   0.4s\n","[CV 4/5] END max_depth=10, min_samples_leaf=10, n_estimators=200;, score=0.964 total time=   0.4s\n","[CV 5/5] END max_depth=10, min_samples_leaf=10, n_estimators=200;, score=0.985 total time=   0.4s\n","[CV 1/5] END max_depth=10, min_samples_leaf=10, n_estimators=500;, score=0.995 total time=   0.9s\n","[CV 2/5] END max_depth=10, min_samples_leaf=10, n_estimators=500;, score=0.992 total time=   0.9s\n","[CV 3/5] END max_depth=10, min_samples_leaf=10, n_estimators=500;, score=0.999 total time=   1.3s\n","[CV 4/5] END max_depth=10, min_samples_leaf=10, n_estimators=500;, score=0.964 total time=   1.3s\n","[CV 5/5] END max_depth=10, min_samples_leaf=10, n_estimators=500;, score=0.988 total time=   1.4s\n","[CV 1/5] END max_depth=10, min_samples_leaf=20, n_estimators=50;, score=0.996 total time=   0.1s\n","[CV 2/5] END max_depth=10, min_samples_leaf=20, n_estimators=50;, score=0.991 total time=   0.1s\n","[CV 3/5] END max_depth=10, min_samples_leaf=20, n_estimators=50;, score=0.999 total time=   0.1s\n","[CV 4/5] END max_depth=10, min_samples_leaf=20, n_estimators=50;, score=0.962 total time=   0.1s\n","[CV 5/5] END max_depth=10, min_samples_leaf=20, n_estimators=50;, score=0.985 total time=   0.1s\n","[CV 1/5] END max_depth=10, min_samples_leaf=20, n_estimators=100;, score=0.993 total time=   0.2s\n","[CV 2/5] END max_depth=10, min_samples_leaf=20, n_estimators=100;, score=0.989 total time=   0.2s\n","[CV 3/5] END max_depth=10, min_samples_leaf=20, n_estimators=100;, score=0.999 total time=   0.2s\n","[CV 4/5] END max_depth=10, min_samples_leaf=20, n_estimators=100;, score=0.957 total time=   0.2s\n","[CV 5/5] END max_depth=10, min_samples_leaf=20, n_estimators=100;, score=0.986 total time=   0.2s\n","[CV 1/5] END max_depth=10, min_samples_leaf=20, n_estimators=200;, score=0.993 total time=   0.3s\n","[CV 2/5] END max_depth=10, min_samples_leaf=20, n_estimators=200;, score=0.989 total time=   0.4s\n","[CV 3/5] END max_depth=10, min_samples_leaf=20, n_estimators=200;, score=0.999 total time=   0.3s\n","[CV 4/5] END max_depth=10, min_samples_leaf=20, n_estimators=200;, score=0.961 total time=   0.4s\n","[CV 5/5] END max_depth=10, min_samples_leaf=20, n_estimators=200;, score=0.987 total time=   0.4s\n","[CV 1/5] END max_depth=10, min_samples_leaf=20, n_estimators=500;, score=0.991 total time=   0.8s\n","[CV 2/5] END max_depth=10, min_samples_leaf=20, n_estimators=500;, score=0.989 total time=   0.8s\n","[CV 3/5] END max_depth=10, min_samples_leaf=20, n_estimators=500;, score=0.999 total time=   0.8s\n","[CV 4/5] END max_depth=10, min_samples_leaf=20, n_estimators=500;, score=0.961 total time=   0.8s\n","[CV 5/5] END max_depth=10, min_samples_leaf=20, n_estimators=500;, score=0.986 total time=   0.8s\n","[CV 1/5] END max_depth=10, min_samples_leaf=50, n_estimators=50;, score=0.993 total time=   0.1s\n","[CV 2/5] END max_depth=10, min_samples_leaf=50, n_estimators=50;, score=0.989 total time=   0.1s\n","[CV 3/5] END max_depth=10, min_samples_leaf=50, n_estimators=50;, score=0.996 total time=   0.1s\n","[CV 4/5] END max_depth=10, min_samples_leaf=50, n_estimators=50;, score=0.964 total time=   0.1s\n","[CV 5/5] END max_depth=10, min_samples_leaf=50, n_estimators=50;, score=0.984 total time=   0.1s\n","[CV 1/5] END max_depth=10, min_samples_leaf=50, n_estimators=100;, score=0.992 total time=   0.2s\n","[CV 2/5] END max_depth=10, min_samples_leaf=50, n_estimators=100;, score=0.986 total time=   0.2s\n","[CV 3/5] END max_depth=10, min_samples_leaf=50, n_estimators=100;, score=0.996 total time=   0.2s\n","[CV 4/5] END max_depth=10, min_samples_leaf=50, n_estimators=100;, score=0.963 total time=   0.2s\n","[CV 5/5] END max_depth=10, min_samples_leaf=50, n_estimators=100;, score=0.986 total time=   0.2s\n","[CV 1/5] END max_depth=10, min_samples_leaf=50, n_estimators=200;, score=0.990 total time=   0.3s\n","[CV 2/5] END max_depth=10, min_samples_leaf=50, n_estimators=200;, score=0.989 total time=   0.3s\n","[CV 3/5] END max_depth=10, min_samples_leaf=50, n_estimators=200;, score=0.999 total time=   0.3s\n","[CV 4/5] END max_depth=10, min_samples_leaf=50, n_estimators=200;, score=0.965 total time=   0.4s\n","[CV 5/5] END max_depth=10, min_samples_leaf=50, n_estimators=200;, score=0.985 total time=   0.5s\n","[CV 1/5] END max_depth=10, min_samples_leaf=50, n_estimators=500;, score=0.991 total time=   1.2s\n","[CV 2/5] END max_depth=10, min_samples_leaf=50, n_estimators=500;, score=0.988 total time=   1.3s\n","[CV 3/5] END max_depth=10, min_samples_leaf=50, n_estimators=500;, score=0.999 total time=   1.1s\n","[CV 4/5] END max_depth=10, min_samples_leaf=50, n_estimators=500;, score=0.963 total time=   0.8s\n","[CV 5/5] END max_depth=10, min_samples_leaf=50, n_estimators=500;, score=0.984 total time=   0.8s\n","[CV 1/5] END max_depth=20, min_samples_leaf=10, n_estimators=50;, score=0.997 total time=   0.1s\n","[CV 2/5] END max_depth=20, min_samples_leaf=10, n_estimators=50;, score=0.993 total time=   0.1s\n","[CV 3/5] END max_depth=20, min_samples_leaf=10, n_estimators=50;, score=0.999 total time=   0.1s\n","[CV 4/5] END max_depth=20, min_samples_leaf=10, n_estimators=50;, score=0.965 total time=   0.1s\n","[CV 5/5] END max_depth=20, min_samples_leaf=10, n_estimators=50;, score=0.984 total time=   0.1s\n","[CV 1/5] END max_depth=20, min_samples_leaf=10, n_estimators=100;, score=0.997 total time=   0.2s\n","[CV 2/5] END max_depth=20, min_samples_leaf=10, n_estimators=100;, score=0.992 total time=   0.2s\n","[CV 3/5] END max_depth=20, min_samples_leaf=10, n_estimators=100;, score=0.999 total time=   0.2s\n","[CV 4/5] END max_depth=20, min_samples_leaf=10, n_estimators=100;, score=0.959 total time=   0.2s\n","[CV 5/5] END max_depth=20, min_samples_leaf=10, n_estimators=100;, score=0.985 total time=   0.2s\n","[CV 1/5] END max_depth=20, min_samples_leaf=10, n_estimators=200;, score=0.996 total time=   0.4s\n","[CV 2/5] END max_depth=20, min_samples_leaf=10, n_estimators=200;, score=0.992 total time=   0.4s\n","[CV 3/5] END max_depth=20, min_samples_leaf=10, n_estimators=200;, score=0.999 total time=   0.4s\n","[CV 4/5] END max_depth=20, min_samples_leaf=10, n_estimators=200;, score=0.964 total time=   0.4s\n","[CV 5/5] END max_depth=20, min_samples_leaf=10, n_estimators=200;, score=0.985 total time=   0.4s\n","[CV 1/5] END max_depth=20, min_samples_leaf=10, n_estimators=500;, score=0.995 total time=   0.9s\n","[CV 2/5] END max_depth=20, min_samples_leaf=10, n_estimators=500;, score=0.992 total time=   0.9s\n","[CV 3/5] END max_depth=20, min_samples_leaf=10, n_estimators=500;, score=0.999 total time=   0.9s\n","[CV 4/5] END max_depth=20, min_samples_leaf=10, n_estimators=500;, score=0.964 total time=   0.9s\n","[CV 5/5] END max_depth=20, min_samples_leaf=10, n_estimators=500;, score=0.988 total time=   0.9s\n","[CV 1/5] END max_depth=20, min_samples_leaf=20, n_estimators=50;, score=0.996 total time=   0.1s\n","[CV 2/5] END max_depth=20, min_samples_leaf=20, n_estimators=50;, score=0.991 total time=   0.1s\n","[CV 3/5] END max_depth=20, min_samples_leaf=20, n_estimators=50;, score=0.999 total time=   0.1s\n","[CV 4/5] END max_depth=20, min_samples_leaf=20, n_estimators=50;, score=0.962 total time=   0.1s\n","[CV 5/5] END max_depth=20, min_samples_leaf=20, n_estimators=50;, score=0.985 total time=   0.2s\n","[CV 1/5] END max_depth=20, min_samples_leaf=20, n_estimators=100;, score=0.993 total time=   0.3s\n","[CV 2/5] END max_depth=20, min_samples_leaf=20, n_estimators=100;, score=0.989 total time=   0.3s\n","[CV 3/5] END max_depth=20, min_samples_leaf=20, n_estimators=100;, score=0.999 total time=   0.3s\n","[CV 4/5] END max_depth=20, min_samples_leaf=20, n_estimators=100;, score=0.957 total time=   0.3s\n","[CV 5/5] END max_depth=20, min_samples_leaf=20, n_estimators=100;, score=0.986 total time=   0.3s\n","[CV 1/5] END max_depth=20, min_samples_leaf=20, n_estimators=200;, score=0.993 total time=   0.6s\n","[CV 2/5] END max_depth=20, min_samples_leaf=20, n_estimators=200;, score=0.989 total time=   0.5s\n","[CV 3/5] END max_depth=20, min_samples_leaf=20, n_estimators=200;, score=0.999 total time=   0.6s\n","[CV 4/5] END max_depth=20, min_samples_leaf=20, n_estimators=200;, score=0.961 total time=   0.4s\n","[CV 5/5] END max_depth=20, min_samples_leaf=20, n_estimators=200;, score=0.987 total time=   0.4s\n","[CV 1/5] END max_depth=20, min_samples_leaf=20, n_estimators=500;, score=0.991 total time=   0.8s\n","[CV 2/5] END max_depth=20, min_samples_leaf=20, n_estimators=500;, score=0.989 total time=   0.8s\n","[CV 3/5] END max_depth=20, min_samples_leaf=20, n_estimators=500;, score=0.999 total time=   0.9s\n","[CV 4/5] END max_depth=20, min_samples_leaf=20, n_estimators=500;, score=0.961 total time=   0.9s\n","[CV 5/5] END max_depth=20, min_samples_leaf=20, n_estimators=500;, score=0.986 total time=   0.9s\n","[CV 1/5] END max_depth=20, min_samples_leaf=50, n_estimators=50;, score=0.993 total time=   0.1s\n","[CV 2/5] END max_depth=20, min_samples_leaf=50, n_estimators=50;, score=0.989 total time=   0.1s\n","[CV 3/5] END max_depth=20, min_samples_leaf=50, n_estimators=50;, score=0.996 total time=   0.1s\n","[CV 4/5] END max_depth=20, min_samples_leaf=50, n_estimators=50;, score=0.964 total time=   0.1s\n","[CV 5/5] END max_depth=20, min_samples_leaf=50, n_estimators=50;, score=0.984 total time=   0.1s\n","[CV 1/5] END max_depth=20, min_samples_leaf=50, n_estimators=100;, score=0.992 total time=   0.2s\n","[CV 2/5] END max_depth=20, min_samples_leaf=50, n_estimators=100;, score=0.986 total time=   0.2s\n","[CV 3/5] END max_depth=20, min_samples_leaf=50, n_estimators=100;, score=0.996 total time=   0.2s\n","[CV 4/5] END max_depth=20, min_samples_leaf=50, n_estimators=100;, score=0.963 total time=   0.2s\n","[CV 5/5] END max_depth=20, min_samples_leaf=50, n_estimators=100;, score=0.986 total time=   0.2s\n","[CV 1/5] END max_depth=20, min_samples_leaf=50, n_estimators=200;, score=0.990 total time=   0.4s\n","[CV 2/5] END max_depth=20, min_samples_leaf=50, n_estimators=200;, score=0.989 total time=   0.4s\n","[CV 3/5] END max_depth=20, min_samples_leaf=50, n_estimators=200;, score=0.999 total time=   0.3s\n","[CV 4/5] END max_depth=20, min_samples_leaf=50, n_estimators=200;, score=0.965 total time=   0.3s\n","[CV 5/5] END max_depth=20, min_samples_leaf=50, n_estimators=200;, score=0.985 total time=   0.3s\n","[CV 1/5] END max_depth=20, min_samples_leaf=50, n_estimators=500;, score=0.991 total time=   0.8s\n","[CV 2/5] END max_depth=20, min_samples_leaf=50, n_estimators=500;, score=0.988 total time=   0.8s\n","[CV 3/5] END max_depth=20, min_samples_leaf=50, n_estimators=500;, score=0.999 total time=   1.1s\n","[CV 4/5] END max_depth=20, min_samples_leaf=50, n_estimators=500;, score=0.963 total time=   1.3s\n","[CV 5/5] END max_depth=20, min_samples_leaf=50, n_estimators=500;, score=0.984 total time=   1.3s\n","[CV 1/5] END max_depth=50, min_samples_leaf=10, n_estimators=50;, score=0.997 total time=   0.1s\n","[CV 2/5] END max_depth=50, min_samples_leaf=10, n_estimators=50;, score=0.993 total time=   0.2s\n","[CV 3/5] END max_depth=50, min_samples_leaf=10, n_estimators=50;, score=0.999 total time=   0.1s\n","[CV 4/5] END max_depth=50, min_samples_leaf=10, n_estimators=50;, score=0.965 total time=   0.2s\n","[CV 5/5] END max_depth=50, min_samples_leaf=10, n_estimators=50;, score=0.984 total time=   0.1s\n","[CV 1/5] END max_depth=50, min_samples_leaf=10, n_estimators=100;, score=0.997 total time=   0.2s\n","[CV 2/5] END max_depth=50, min_samples_leaf=10, n_estimators=100;, score=0.992 total time=   0.2s\n","[CV 3/5] END max_depth=50, min_samples_leaf=10, n_estimators=100;, score=0.999 total time=   0.2s\n","[CV 4/5] END max_depth=50, min_samples_leaf=10, n_estimators=100;, score=0.959 total time=   0.2s\n","[CV 5/5] END max_depth=50, min_samples_leaf=10, n_estimators=100;, score=0.985 total time=   0.2s\n","[CV 1/5] END max_depth=50, min_samples_leaf=10, n_estimators=200;, score=0.996 total time=   0.4s\n","[CV 2/5] END max_depth=50, min_samples_leaf=10, n_estimators=200;, score=0.992 total time=   0.4s\n","[CV 3/5] END max_depth=50, min_samples_leaf=10, n_estimators=200;, score=0.999 total time=   0.4s\n","[CV 4/5] END max_depth=50, min_samples_leaf=10, n_estimators=200;, score=0.964 total time=   0.4s\n","[CV 5/5] END max_depth=50, min_samples_leaf=10, n_estimators=200;, score=0.985 total time=   0.4s\n","[CV 1/5] END max_depth=50, min_samples_leaf=10, n_estimators=500;, score=0.995 total time=   0.9s\n","[CV 2/5] END max_depth=50, min_samples_leaf=10, n_estimators=500;, score=0.992 total time=   0.9s\n","[CV 3/5] END max_depth=50, min_samples_leaf=10, n_estimators=500;, score=0.999 total time=   0.9s\n","[CV 4/5] END max_depth=50, min_samples_leaf=10, n_estimators=500;, score=0.964 total time=   0.9s\n","[CV 5/5] END max_depth=50, min_samples_leaf=10, n_estimators=500;, score=0.988 total time=   0.9s\n","[CV 1/5] END max_depth=50, min_samples_leaf=20, n_estimators=50;, score=0.996 total time=   0.1s\n","[CV 2/5] END max_depth=50, min_samples_leaf=20, n_estimators=50;, score=0.991 total time=   0.1s\n","[CV 3/5] END max_depth=50, min_samples_leaf=20, n_estimators=50;, score=0.999 total time=   0.1s\n","[CV 4/5] END max_depth=50, min_samples_leaf=20, n_estimators=50;, score=0.962 total time=   0.1s\n","[CV 5/5] END max_depth=50, min_samples_leaf=20, n_estimators=50;, score=0.985 total time=   0.1s\n","[CV 1/5] END max_depth=50, min_samples_leaf=20, n_estimators=100;, score=0.993 total time=   0.2s\n","[CV 2/5] END max_depth=50, min_samples_leaf=20, n_estimators=100;, score=0.989 total time=   0.2s\n","[CV 3/5] END max_depth=50, min_samples_leaf=20, n_estimators=100;, score=0.999 total time=   0.2s\n","[CV 4/5] END max_depth=50, min_samples_leaf=20, n_estimators=100;, score=0.957 total time=   0.2s\n","[CV 5/5] END max_depth=50, min_samples_leaf=20, n_estimators=100;, score=0.986 total time=   0.2s\n","[CV 1/5] END max_depth=50, min_samples_leaf=20, n_estimators=200;, score=0.993 total time=   0.3s\n","[CV 2/5] END max_depth=50, min_samples_leaf=20, n_estimators=200;, score=0.989 total time=   0.3s\n","[CV 3/5] END max_depth=50, min_samples_leaf=20, n_estimators=200;, score=0.999 total time=   0.3s\n","[CV 4/5] END max_depth=50, min_samples_leaf=20, n_estimators=200;, score=0.961 total time=   0.4s\n","[CV 5/5] END max_depth=50, min_samples_leaf=20, n_estimators=200;, score=0.987 total time=   0.6s\n","[CV 1/5] END max_depth=50, min_samples_leaf=20, n_estimators=500;, score=0.991 total time=   1.3s\n","[CV 2/5] END max_depth=50, min_samples_leaf=20, n_estimators=500;, score=0.989 total time=   1.3s\n","[CV 3/5] END max_depth=50, min_samples_leaf=20, n_estimators=500;, score=0.999 total time=   1.0s\n","[CV 4/5] END max_depth=50, min_samples_leaf=20, n_estimators=500;, score=0.961 total time=   0.9s\n","[CV 5/5] END max_depth=50, min_samples_leaf=20, n_estimators=500;, score=0.986 total time=   0.9s\n","[CV 1/5] END max_depth=50, min_samples_leaf=50, n_estimators=50;, score=0.993 total time=   0.1s\n","[CV 2/5] END max_depth=50, min_samples_leaf=50, n_estimators=50;, score=0.989 total time=   0.1s\n","[CV 3/5] END max_depth=50, min_samples_leaf=50, n_estimators=50;, score=0.996 total time=   0.1s\n","[CV 4/5] END max_depth=50, min_samples_leaf=50, n_estimators=50;, score=0.964 total time=   0.1s\n","[CV 5/5] END max_depth=50, min_samples_leaf=50, n_estimators=50;, score=0.984 total time=   0.1s\n","[CV 1/5] END max_depth=50, min_samples_leaf=50, n_estimators=100;, score=0.992 total time=   0.2s\n","[CV 2/5] END max_depth=50, min_samples_leaf=50, n_estimators=100;, score=0.986 total time=   0.2s\n","[CV 3/5] END max_depth=50, min_samples_leaf=50, n_estimators=100;, score=0.996 total time=   0.2s\n","[CV 4/5] END max_depth=50, min_samples_leaf=50, n_estimators=100;, score=0.963 total time=   0.3s\n","[CV 5/5] END max_depth=50, min_samples_leaf=50, n_estimators=100;, score=0.986 total time=   0.3s\n","[CV 1/5] END max_depth=50, min_samples_leaf=50, n_estimators=200;, score=0.990 total time=   0.5s\n","[CV 2/5] END max_depth=50, min_samples_leaf=50, n_estimators=200;, score=0.989 total time=   0.5s\n","[CV 3/5] END max_depth=50, min_samples_leaf=50, n_estimators=200;, score=0.999 total time=   0.5s\n","[CV 4/5] END max_depth=50, min_samples_leaf=50, n_estimators=200;, score=0.965 total time=   0.7s\n","[CV 5/5] END max_depth=50, min_samples_leaf=50, n_estimators=200;, score=0.985 total time=   0.5s\n","[CV 1/5] END max_depth=50, min_samples_leaf=50, n_estimators=500;, score=0.991 total time=   0.9s\n","[CV 2/5] END max_depth=50, min_samples_leaf=50, n_estimators=500;, score=0.988 total time=   0.8s\n","[CV 3/5] END max_depth=50, min_samples_leaf=50, n_estimators=500;, score=0.999 total time=   0.8s\n","[CV 4/5] END max_depth=50, min_samples_leaf=50, n_estimators=500;, score=0.963 total time=   0.8s\n","[CV 5/5] END max_depth=50, min_samples_leaf=50, n_estimators=500;, score=0.984 total time=   1.3s\n","[CV 1/5] END max_depth=100, min_samples_leaf=10, n_estimators=50;, score=0.997 total time=   0.1s\n","[CV 2/5] END max_depth=100, min_samples_leaf=10, n_estimators=50;, score=0.993 total time=   0.2s\n","[CV 3/5] END max_depth=100, min_samples_leaf=10, n_estimators=50;, score=0.999 total time=   0.1s\n","[CV 4/5] END max_depth=100, min_samples_leaf=10, n_estimators=50;, score=0.965 total time=   0.1s\n","[CV 5/5] END max_depth=100, min_samples_leaf=10, n_estimators=50;, score=0.984 total time=   0.1s\n","[CV 1/5] END max_depth=100, min_samples_leaf=10, n_estimators=100;, score=0.997 total time=   0.3s\n","[CV 2/5] END max_depth=100, min_samples_leaf=10, n_estimators=100;, score=0.992 total time=   0.3s\n","[CV 3/5] END max_depth=100, min_samples_leaf=10, n_estimators=100;, score=0.999 total time=   0.3s\n","[CV 4/5] END max_depth=100, min_samples_leaf=10, n_estimators=100;, score=0.959 total time=   0.3s\n","[CV 5/5] END max_depth=100, min_samples_leaf=10, n_estimators=100;, score=0.985 total time=   0.3s\n","[CV 1/5] END max_depth=100, min_samples_leaf=10, n_estimators=200;, score=0.996 total time=   0.5s\n","[CV 2/5] END max_depth=100, min_samples_leaf=10, n_estimators=200;, score=0.992 total time=   0.4s\n","[CV 3/5] END max_depth=100, min_samples_leaf=10, n_estimators=200;, score=0.999 total time=   0.4s\n","[CV 4/5] END max_depth=100, min_samples_leaf=10, n_estimators=200;, score=0.964 total time=   0.4s\n","[CV 5/5] END max_depth=100, min_samples_leaf=10, n_estimators=200;, score=0.985 total time=   0.4s\n","[CV 1/5] END max_depth=100, min_samples_leaf=10, n_estimators=500;, score=0.995 total time=   0.9s\n","[CV 2/5] END max_depth=100, min_samples_leaf=10, n_estimators=500;, score=0.992 total time=   0.9s\n","[CV 3/5] END max_depth=100, min_samples_leaf=10, n_estimators=500;, score=0.999 total time=   0.9s\n","[CV 4/5] END max_depth=100, min_samples_leaf=10, n_estimators=500;, score=0.964 total time=   0.9s\n","[CV 5/5] END max_depth=100, min_samples_leaf=10, n_estimators=500;, score=0.988 total time=   0.9s\n","[CV 1/5] END max_depth=100, min_samples_leaf=20, n_estimators=50;, score=0.996 total time=   0.1s\n","[CV 2/5] END max_depth=100, min_samples_leaf=20, n_estimators=50;, score=0.991 total time=   0.1s\n","[CV 3/5] END max_depth=100, min_samples_leaf=20, n_estimators=50;, score=0.999 total time=   0.1s\n","[CV 4/5] END max_depth=100, min_samples_leaf=20, n_estimators=50;, score=0.962 total time=   0.1s\n","[CV 5/5] END max_depth=100, min_samples_leaf=20, n_estimators=50;, score=0.985 total time=   0.1s\n","[CV 1/5] END max_depth=100, min_samples_leaf=20, n_estimators=100;, score=0.993 total time=   0.2s\n","[CV 2/5] END max_depth=100, min_samples_leaf=20, n_estimators=100;, score=0.989 total time=   0.2s\n","[CV 3/5] END max_depth=100, min_samples_leaf=20, n_estimators=100;, score=0.999 total time=   0.2s\n","[CV 4/5] END max_depth=100, min_samples_leaf=20, n_estimators=100;, score=0.957 total time=   0.2s\n","[CV 5/5] END max_depth=100, min_samples_leaf=20, n_estimators=100;, score=0.986 total time=   0.2s\n","[CV 1/5] END max_depth=100, min_samples_leaf=20, n_estimators=200;, score=0.993 total time=   0.3s\n","[CV 2/5] END max_depth=100, min_samples_leaf=20, n_estimators=200;, score=0.989 total time=   0.4s\n","[CV 3/5] END max_depth=100, min_samples_leaf=20, n_estimators=200;, score=0.999 total time=   0.4s\n","[CV 4/5] END max_depth=100, min_samples_leaf=20, n_estimators=200;, score=0.961 total time=   0.4s\n","[CV 5/5] END max_depth=100, min_samples_leaf=20, n_estimators=200;, score=0.987 total time=   0.4s\n","[CV 1/5] END max_depth=100, min_samples_leaf=20, n_estimators=500;, score=0.991 total time=   1.1s\n","[CV 2/5] END max_depth=100, min_samples_leaf=20, n_estimators=500;, score=0.989 total time=   1.3s\n","[CV 3/5] END max_depth=100, min_samples_leaf=20, n_estimators=500;, score=0.999 total time=   1.3s\n","[CV 4/5] END max_depth=100, min_samples_leaf=20, n_estimators=500;, score=0.961 total time=   1.2s\n","[CV 5/5] END max_depth=100, min_samples_leaf=20, n_estimators=500;, score=0.986 total time=   0.9s\n","[CV 1/5] END max_depth=100, min_samples_leaf=50, n_estimators=50;, score=0.993 total time=   0.1s\n","[CV 2/5] END max_depth=100, min_samples_leaf=50, n_estimators=50;, score=0.989 total time=   0.1s\n","[CV 3/5] END max_depth=100, min_samples_leaf=50, n_estimators=50;, score=0.996 total time=   0.1s\n","[CV 4/5] END max_depth=100, min_samples_leaf=50, n_estimators=50;, score=0.964 total time=   0.1s\n","[CV 5/5] END max_depth=100, min_samples_leaf=50, n_estimators=50;, score=0.984 total time=   0.1s\n","[CV 1/5] END max_depth=100, min_samples_leaf=50, n_estimators=100;, score=0.992 total time=   0.2s\n","[CV 2/5] END max_depth=100, min_samples_leaf=50, n_estimators=100;, score=0.986 total time=   0.2s\n","[CV 3/5] END max_depth=100, min_samples_leaf=50, n_estimators=100;, score=0.996 total time=   0.2s\n","[CV 4/5] END max_depth=100, min_samples_leaf=50, n_estimators=100;, score=0.963 total time=   0.2s\n","[CV 5/5] END max_depth=100, min_samples_leaf=50, n_estimators=100;, score=0.986 total time=   0.2s\n","[CV 1/5] END max_depth=100, min_samples_leaf=50, n_estimators=200;, score=0.990 total time=   0.3s\n","[CV 2/5] END max_depth=100, min_samples_leaf=50, n_estimators=200;, score=0.989 total time=   0.3s\n","[CV 3/5] END max_depth=100, min_samples_leaf=50, n_estimators=200;, score=0.999 total time=   0.3s\n","[CV 4/5] END max_depth=100, min_samples_leaf=50, n_estimators=200;, score=0.965 total time=   0.3s\n","[CV 5/5] END max_depth=100, min_samples_leaf=50, n_estimators=200;, score=0.985 total time=   0.5s\n","[CV 1/5] END max_depth=100, min_samples_leaf=50, n_estimators=500;, score=0.991 total time=   1.4s\n","[CV 2/5] END max_depth=100, min_samples_leaf=50, n_estimators=500;, score=0.988 total time=   1.1s\n","[CV 3/5] END max_depth=100, min_samples_leaf=50, n_estimators=500;, score=0.999 total time=   0.8s\n","[CV 4/5] END max_depth=100, min_samples_leaf=50, n_estimators=500;, score=0.963 total time=   0.8s\n","[CV 5/5] END max_depth=100, min_samples_leaf=50, n_estimators=500;, score=0.984 total time=   0.8s\n"]},{"output_type":"execute_result","data":{"text/plain":["GridSearchCV(estimator=RandomForestClassifier(class_weight={0: 1,\n","                                                            1: 0.5941422594142259},\n","                                              random_state=0, warm_start=True),\n","             param_grid={'max_depth': [10, 20, 50, 100],\n","                         'min_samples_leaf': [10, 20, 50],\n","                         'n_estimators': [50, 100, 200, 500]},\n","             scoring='roc_auc', verbose=5)"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(estimator=RandomForestClassifier(class_weight={0: 1,\n","                                                            1: 0.5941422594142259},\n","                                              random_state=0, warm_start=True),\n","             param_grid={&#x27;max_depth&#x27;: [10, 20, 50, 100],\n","                         &#x27;min_samples_leaf&#x27;: [10, 20, 50],\n","                         &#x27;n_estimators&#x27;: [50, 100, 200, 500]},\n","             scoring=&#x27;roc_auc&#x27;, verbose=5)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(estimator=RandomForestClassifier(class_weight={0: 1,\n","                                                            1: 0.5941422594142259},\n","                                              random_state=0, warm_start=True),\n","             param_grid={&#x27;max_depth&#x27;: [10, 20, 50, 100],\n","                         &#x27;min_samples_leaf&#x27;: [10, 20, 50],\n","                         &#x27;n_estimators&#x27;: [50, 100, 200, 500]},\n","             scoring=&#x27;roc_auc&#x27;, verbose=5)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(class_weight={0: 1, 1: 0.5941422594142259},\n","                       random_state=0, warm_start=True)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(class_weight={0: 1, 1: 0.5941422594142259},\n","                       random_state=0, warm_start=True)</pre></div></div></div></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["cv_grid.cv_results_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZLb67iW_WxAw","executionInfo":{"status":"ok","timestamp":1709822537130,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}},"outputId":"50c0a9f5-f4af-4d2c-8f91-041c89e4d9b5"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'mean_fit_time': array([0.25446858, 0.20294285, 0.34639397, 1.14288616, 0.08470988,\n","        0.16833725, 0.33659315, 0.81737738, 0.08300195, 0.1678587 ,\n","        0.36887126, 0.99989314, 0.08657308, 0.17380328, 0.34545131,\n","        0.85651493, 0.11542521, 0.2826108 , 0.47588887, 0.81871195,\n","        0.09221859, 0.17209587, 0.32001119, 0.99868226, 0.13372717,\n","        0.17498007, 0.36982827, 0.85548043, 0.08673863, 0.16857848,\n","        0.37917242, 1.05065088, 0.08496785, 0.20237932, 0.52026877,\n","        0.90275216, 0.13538823, 0.28047619, 0.37457561, 0.85297117,\n","        0.08530569, 0.17284269, 0.34942656, 1.11855278, 0.0900876 ,\n","        0.16676955, 0.34712496, 0.95703907]),\n"," 'std_fit_time': array([0.04646299, 0.05478355, 0.0075016 , 0.20262675, 0.00226835,\n","        0.00622887, 0.00753783, 0.0043556 , 0.00374232, 0.00415156,\n","        0.06318135, 0.1958927 , 0.0016162 , 0.00563185, 0.00873952,\n","        0.02120855, 0.02213988, 0.02040855, 0.08226066, 0.01190967,\n","        0.00685048, 0.00709014, 0.01641434, 0.20089575, 0.01554153,\n","        0.00536807, 0.01985126, 0.01191473, 0.00482033, 0.00496887,\n","        0.0913696 , 0.19768425, 0.00552558, 0.03612906, 0.05484506,\n","        0.17047358, 0.00516002, 0.00483387, 0.03676537, 0.01046188,\n","        0.00157358, 0.00769649, 0.01791982, 0.15786267, 0.00844431,\n","        0.00715521, 0.05573385, 0.24253747]),\n"," 'mean_score_time': array([0.02086244, 0.00868988, 0.01395683, 0.03463783, 0.00587139,\n","        0.00836487, 0.01319208, 0.02910147, 0.00637422, 0.01036348,\n","        0.01613679, 0.03244462, 0.00583677, 0.0081449 , 0.01481671,\n","        0.03346939, 0.00830846, 0.01386895, 0.01719847, 0.02834263,\n","        0.00673089, 0.00942955, 0.01329184, 0.04102778, 0.00881882,\n","        0.008143  , 0.01409473, 0.02709289, 0.00640864, 0.00808353,\n","        0.01593266, 0.03973856, 0.00604577, 0.01054773, 0.02172265,\n","        0.03512316, 0.00899267, 0.01315351, 0.01633306, 0.03251367,\n","        0.00627289, 0.00922971, 0.01518493, 0.0393805 , 0.00675216,\n","        0.0089323 , 0.02136383, 0.027637  ]),\n"," 'std_score_time': array([1.13592019e-02, 6.63311853e-04, 2.05794840e-03, 5.82687584e-03,\n","        2.71039903e-04, 3.29457466e-04, 7.08251941e-04, 1.83211654e-03,\n","        5.44063228e-04, 2.48043878e-03, 2.84305223e-03, 6.28998261e-03,\n","        1.48793549e-04, 1.48680196e-04, 2.62064248e-03, 1.02077776e-02,\n","        1.55304709e-03, 1.74686052e-03, 3.21319797e-03, 1.77498899e-03,\n","        2.92991877e-04, 8.22563580e-04, 9.82783547e-04, 7.72150091e-03,\n","        1.77278551e-03, 2.26982471e-04, 6.76009545e-04, 3.36497479e-04,\n","        1.21898034e-03, 8.13419623e-05, 3.67060696e-03, 5.56072782e-03,\n","        1.60960647e-04, 2.10184435e-03, 3.68592361e-03, 7.55342291e-03,\n","        1.05305978e-03, 1.02511618e-03, 2.84109093e-03, 7.09180883e-03,\n","        1.06493622e-03, 1.90319049e-03, 1.40019884e-03, 4.70174817e-03,\n","        7.36277161e-04, 2.25891980e-04, 1.55450542e-02, 1.88007298e-03]),\n"," 'param_max_depth': masked_array(data=[10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 20, 20,\n","                    20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 50, 50, 50, 50,\n","                    50, 50, 50, 50, 50, 50, 50, 50, 100, 100, 100, 100,\n","                    100, 100, 100, 100, 100, 100, 100, 100],\n","              mask=[False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False],\n","        fill_value='?',\n","             dtype=object),\n"," 'param_min_samples_leaf': masked_array(data=[10, 10, 10, 10, 20, 20, 20, 20, 50, 50, 50, 50, 10, 10,\n","                    10, 10, 20, 20, 20, 20, 50, 50, 50, 50, 10, 10, 10, 10,\n","                    20, 20, 20, 20, 50, 50, 50, 50, 10, 10, 10, 10, 20, 20,\n","                    20, 20, 50, 50, 50, 50],\n","              mask=[False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False],\n","        fill_value='?',\n","             dtype=object),\n"," 'param_n_estimators': masked_array(data=[50, 100, 200, 500, 50, 100, 200, 500, 50, 100, 200,\n","                    500, 50, 100, 200, 500, 50, 100, 200, 500, 50, 100,\n","                    200, 500, 50, 100, 200, 500, 50, 100, 200, 500, 50,\n","                    100, 200, 500, 50, 100, 200, 500, 50, 100, 200, 500,\n","                    50, 100, 200, 500],\n","              mask=[False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False,\n","                    False, False, False, False, False, False, False, False],\n","        fill_value='?',\n","             dtype=object),\n"," 'params': [{'max_depth': 10, 'min_samples_leaf': 10, 'n_estimators': 50},\n","  {'max_depth': 10, 'min_samples_leaf': 10, 'n_estimators': 100},\n","  {'max_depth': 10, 'min_samples_leaf': 10, 'n_estimators': 200},\n","  {'max_depth': 10, 'min_samples_leaf': 10, 'n_estimators': 500},\n","  {'max_depth': 10, 'min_samples_leaf': 20, 'n_estimators': 50},\n","  {'max_depth': 10, 'min_samples_leaf': 20, 'n_estimators': 100},\n","  {'max_depth': 10, 'min_samples_leaf': 20, 'n_estimators': 200},\n","  {'max_depth': 10, 'min_samples_leaf': 20, 'n_estimators': 500},\n","  {'max_depth': 10, 'min_samples_leaf': 50, 'n_estimators': 50},\n","  {'max_depth': 10, 'min_samples_leaf': 50, 'n_estimators': 100},\n","  {'max_depth': 10, 'min_samples_leaf': 50, 'n_estimators': 200},\n","  {'max_depth': 10, 'min_samples_leaf': 50, 'n_estimators': 500},\n","  {'max_depth': 20, 'min_samples_leaf': 10, 'n_estimators': 50},\n","  {'max_depth': 20, 'min_samples_leaf': 10, 'n_estimators': 100},\n","  {'max_depth': 20, 'min_samples_leaf': 10, 'n_estimators': 200},\n","  {'max_depth': 20, 'min_samples_leaf': 10, 'n_estimators': 500},\n","  {'max_depth': 20, 'min_samples_leaf': 20, 'n_estimators': 50},\n","  {'max_depth': 20, 'min_samples_leaf': 20, 'n_estimators': 100},\n","  {'max_depth': 20, 'min_samples_leaf': 20, 'n_estimators': 200},\n","  {'max_depth': 20, 'min_samples_leaf': 20, 'n_estimators': 500},\n","  {'max_depth': 20, 'min_samples_leaf': 50, 'n_estimators': 50},\n","  {'max_depth': 20, 'min_samples_leaf': 50, 'n_estimators': 100},\n","  {'max_depth': 20, 'min_samples_leaf': 50, 'n_estimators': 200},\n","  {'max_depth': 20, 'min_samples_leaf': 50, 'n_estimators': 500},\n","  {'max_depth': 50, 'min_samples_leaf': 10, 'n_estimators': 50},\n","  {'max_depth': 50, 'min_samples_leaf': 10, 'n_estimators': 100},\n","  {'max_depth': 50, 'min_samples_leaf': 10, 'n_estimators': 200},\n","  {'max_depth': 50, 'min_samples_leaf': 10, 'n_estimators': 500},\n","  {'max_depth': 50, 'min_samples_leaf': 20, 'n_estimators': 50},\n","  {'max_depth': 50, 'min_samples_leaf': 20, 'n_estimators': 100},\n","  {'max_depth': 50, 'min_samples_leaf': 20, 'n_estimators': 200},\n","  {'max_depth': 50, 'min_samples_leaf': 20, 'n_estimators': 500},\n","  {'max_depth': 50, 'min_samples_leaf': 50, 'n_estimators': 50},\n","  {'max_depth': 50, 'min_samples_leaf': 50, 'n_estimators': 100},\n","  {'max_depth': 50, 'min_samples_leaf': 50, 'n_estimators': 200},\n","  {'max_depth': 50, 'min_samples_leaf': 50, 'n_estimators': 500},\n","  {'max_depth': 100, 'min_samples_leaf': 10, 'n_estimators': 50},\n","  {'max_depth': 100, 'min_samples_leaf': 10, 'n_estimators': 100},\n","  {'max_depth': 100, 'min_samples_leaf': 10, 'n_estimators': 200},\n","  {'max_depth': 100, 'min_samples_leaf': 10, 'n_estimators': 500},\n","  {'max_depth': 100, 'min_samples_leaf': 20, 'n_estimators': 50},\n","  {'max_depth': 100, 'min_samples_leaf': 20, 'n_estimators': 100},\n","  {'max_depth': 100, 'min_samples_leaf': 20, 'n_estimators': 200},\n","  {'max_depth': 100, 'min_samples_leaf': 20, 'n_estimators': 500},\n","  {'max_depth': 100, 'min_samples_leaf': 50, 'n_estimators': 50},\n","  {'max_depth': 100, 'min_samples_leaf': 50, 'n_estimators': 100},\n","  {'max_depth': 100, 'min_samples_leaf': 50, 'n_estimators': 200},\n","  {'max_depth': 100, 'min_samples_leaf': 50, 'n_estimators': 500}],\n"," 'split0_test_score': array([0.99712644, 0.99712644, 0.99640805, 0.99497126, 0.99640805,\n","        0.99281609, 0.99281609, 0.99066092, 0.99281609, 0.9920977 ,\n","        0.98994253, 0.99066092, 0.99712644, 0.99712644, 0.99640805,\n","        0.99497126, 0.99640805, 0.99281609, 0.99281609, 0.99066092,\n","        0.99281609, 0.9920977 , 0.98994253, 0.99066092, 0.99712644,\n","        0.99712644, 0.99640805, 0.99497126, 0.99640805, 0.99281609,\n","        0.99281609, 0.99066092, 0.99281609, 0.9920977 , 0.98994253,\n","        0.99066092, 0.99712644, 0.99712644, 0.99640805, 0.99497126,\n","        0.99640805, 0.99281609, 0.99281609, 0.99066092, 0.99281609,\n","        0.9920977 , 0.98994253, 0.99066092]),\n"," 'split1_test_score': array([0.99266324, 0.99192957, 0.99192957, 0.99192957, 0.99119589,\n","        0.98899486, 0.98899486, 0.98899486, 0.98899486, 0.98606016,\n","        0.98899486, 0.98826119, 0.99266324, 0.99192957, 0.99192957,\n","        0.99192957, 0.99119589, 0.98899486, 0.98899486, 0.98899486,\n","        0.98899486, 0.98606016, 0.98899486, 0.98826119, 0.99266324,\n","        0.99192957, 0.99192957, 0.99192957, 0.99119589, 0.98899486,\n","        0.98899486, 0.98899486, 0.98899486, 0.98606016, 0.98899486,\n","        0.98826119, 0.99266324, 0.99192957, 0.99192957, 0.99192957,\n","        0.99119589, 0.98899486, 0.98899486, 0.98899486, 0.98899486,\n","        0.98606016, 0.98899486, 0.98826119]),\n"," 'split2_test_score': array([0.99925595, 0.9985119 , 0.99925595, 0.99925595, 0.9985119 ,\n","        0.9985119 , 0.99925595, 0.9985119 , 0.99553571, 0.99553571,\n","        0.9985119 , 0.9985119 , 0.99925595, 0.9985119 , 0.99925595,\n","        0.99925595, 0.9985119 , 0.9985119 , 0.99925595, 0.9985119 ,\n","        0.99553571, 0.99553571, 0.9985119 , 0.9985119 , 0.99925595,\n","        0.9985119 , 0.99925595, 0.99925595, 0.9985119 , 0.9985119 ,\n","        0.99925595, 0.9985119 , 0.99553571, 0.99553571, 0.9985119 ,\n","        0.9985119 , 0.99925595, 0.9985119 , 0.99925595, 0.99925595,\n","        0.9985119 , 0.9985119 , 0.99925595, 0.9985119 , 0.99553571,\n","        0.99553571, 0.9985119 , 0.9985119 ]),\n"," 'split3_test_score': array([0.96502976, 0.95907738, 0.96428571, 0.96428571, 0.96205357,\n","        0.95684524, 0.96056548, 0.96056548, 0.96354167, 0.96279762,\n","        0.96502976, 0.96279762, 0.96502976, 0.95907738, 0.96428571,\n","        0.96428571, 0.96205357, 0.95684524, 0.96056548, 0.96056548,\n","        0.96354167, 0.96279762, 0.96502976, 0.96279762, 0.96502976,\n","        0.95907738, 0.96428571, 0.96428571, 0.96205357, 0.95684524,\n","        0.96056548, 0.96056548, 0.96354167, 0.96279762, 0.96502976,\n","        0.96279762, 0.96502976, 0.95907738, 0.96428571, 0.96428571,\n","        0.96205357, 0.95684524, 0.96056548, 0.96056548, 0.96354167,\n","        0.96279762, 0.96502976, 0.96279762]),\n"," 'split4_test_score': array([0.98363095, 0.98511905, 0.98511905, 0.98809524, 0.98511905,\n","        0.9858631 , 0.98660714, 0.9858631 , 0.984375  , 0.9858631 ,\n","        0.98511905, 0.984375  , 0.98363095, 0.98511905, 0.98511905,\n","        0.98809524, 0.98511905, 0.9858631 , 0.98660714, 0.9858631 ,\n","        0.984375  , 0.9858631 , 0.98511905, 0.984375  , 0.98363095,\n","        0.98511905, 0.98511905, 0.98809524, 0.98511905, 0.9858631 ,\n","        0.98660714, 0.9858631 , 0.984375  , 0.9858631 , 0.98511905,\n","        0.984375  , 0.98363095, 0.98511905, 0.98511905, 0.98809524,\n","        0.98511905, 0.9858631 , 0.98660714, 0.9858631 , 0.984375  ,\n","        0.9858631 , 0.98511905, 0.984375  ]),\n"," 'mean_test_score': array([0.98754127, 0.98635287, 0.98739967, 0.98770755, 0.98665769,\n","        0.98460624, 0.98564791, 0.98491925, 0.98505267, 0.98447086,\n","        0.98551962, 0.98492133, 0.98754127, 0.98635287, 0.98739967,\n","        0.98770755, 0.98665769, 0.98460624, 0.98564791, 0.98491925,\n","        0.98505267, 0.98447086, 0.98551962, 0.98492133, 0.98754127,\n","        0.98635287, 0.98739967, 0.98770755, 0.98665769, 0.98460624,\n","        0.98564791, 0.98491925, 0.98505267, 0.98447086, 0.98551962,\n","        0.98492133, 0.98754127, 0.98635287, 0.98739967, 0.98770755,\n","        0.98665769, 0.98460624, 0.98564791, 0.98491925, 0.98505267,\n","        0.98447086, 0.98551962, 0.98492133]),\n"," 'std_test_score': array([0.01246918, 0.01442557, 0.01250359, 0.01226935, 0.01314471,\n","        0.01450712, 0.01325   , 0.01287117, 0.011392  , 0.01144372,\n","        0.01113942, 0.01198798, 0.01246918, 0.01442557, 0.01250359,\n","        0.01226935, 0.01314471, 0.01450712, 0.01325   , 0.01287117,\n","        0.011392  , 0.01144372, 0.01113942, 0.01198798, 0.01246918,\n","        0.01442557, 0.01250359, 0.01226935, 0.01314471, 0.01450712,\n","        0.01325   , 0.01287117, 0.011392  , 0.01144372, 0.01113942,\n","        0.01198798, 0.01246918, 0.01442557, 0.01250359, 0.01226935,\n","        0.01314471, 0.01450712, 0.01325   , 0.01287117, 0.011392  ,\n","        0.01144372, 0.01113942, 0.01198798]),\n"," 'rank_test_score': array([ 5, 17,  9,  1, 13, 41, 21, 37, 29, 45, 25, 33,  5, 17,  9,  1, 13,\n","        41, 21, 37, 29, 45, 25, 33,  5, 17,  9,  1, 13, 41, 21, 37, 29, 45,\n","        25, 33,  5, 17,  9,  1, 13, 41, 21, 37, 29, 45, 25, 33],\n","       dtype=int32)}"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["best_parameters = cv_grid.best_estimator_.get_params()\n","best_parameters"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0hqVN88NXWWS","executionInfo":{"status":"ok","timestamp":1709822559623,"user_tz":-330,"elapsed":3,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}},"outputId":"456675e0-db92-4236-d4e6-1a7a5e8647be"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'bootstrap': True,\n"," 'ccp_alpha': 0.0,\n"," 'class_weight': {0: 1, 1: 0.5941422594142259},\n"," 'criterion': 'gini',\n"," 'max_depth': 10,\n"," 'max_features': 'sqrt',\n"," 'max_leaf_nodes': None,\n"," 'max_samples': None,\n"," 'min_impurity_decrease': 0.0,\n"," 'min_samples_leaf': 10,\n"," 'min_samples_split': 2,\n"," 'min_weight_fraction_leaf': 0.0,\n"," 'n_estimators': 500,\n"," 'n_jobs': None,\n"," 'oob_score': False,\n"," 'random_state': 0,\n"," 'verbose': 0,\n"," 'warm_start': True}"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["for param_name in sorted(rf_tuned_parameters.keys()):\n","    print(\"\\t%s: %r\" % (param_name, best_parameters[param_name]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H7DS4vLaXbyG","executionInfo":{"status":"ok","timestamp":1709822589930,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}},"outputId":"a8973003-52bb-4fb0-f8e5-b4309e29227c"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["\tmax_depth: 10\n","\tmin_samples_leaf: 10\n","\tn_estimators: 500\n"]}]},{"cell_type":"code","source":["pred_test = cv_grid.predict(Xtest)\n","print(recall_score(Ytest, pred_test))     #  0.85\n","print(precision_score(Ytest, pred_test))  #  0.81\n","print(roc_auc_score(Ytest, pred_test))    #  0.92\n","print(\"\\n confustion matrix on validation data: \\n\" + str(confusion_matrix(Ytest, pred_test)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ro2s9c3nXjIt","executionInfo":{"status":"ok","timestamp":1709822633171,"user_tz":-330,"elapsed":535,"user":{"displayName":"Sai krishna","userId":"12905860562762944684"}},"outputId":"8b68d4c7-8985-4d48-e5db-20f02d346e2f"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9576271186440678\n","0.9826086956521739\n","0.9645278450363196\n","\n"," confustion matrix on validation data: \n","[[ 68   2]\n"," [  5 113]]\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"TE0q2KabXt0_"},"execution_count":null,"outputs":[]}]}